version: 2.1

jobs:
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["93:12:14:b9:25:73:45:bc:b8:e3:8c:d4:47:26:f4:19"]
      - run:
          name: "Insalling ansible"
          command: |
            apk add --update ansible
      - run:
          name: "Running the playbook"
          command: 
            ansible-playbook -i inventory.txt playbook.yml

workflows:
  cicdpipeline:
    jobs:
      - configure_infrastructure






# jobs:
#   create_infrastructure:
#     docker:
#         - image: amazon/aws-cli
#     steps:
#       - checkout
#       # - run:
#       #     name: Diags
#       #     command: |
#       #       pwd
#       #       ls -la . ..
#       #       printenv
#       - run:
#           name: Ensure backend infrastructure exist
#           command: |
#             aws cloudformation deploy \
#             --template-file template.yml \
#             --stack-name my-stack
# workflows:
#   my_workflow:
#     jobs:
#       - create_infrastructure














# version: 2.1

# defaults: &defaults
#   docker:
#     - image: circleci/node:13.8.0

# jobs:
#   build:
#     <<: *defaults
#     steps:
#       - checkout
#       - run: npm i
#       - save_cache:
#           key: "npm_packages"
#           paths:
#             - /src/node_modules
#       - run: npm run lint

#   test:
#     <<: *defaults
#     steps:
#       - checkout
#       - restore_cache:
#           key: "npm_packages"
#       - run: npm i
#       - run: npm run test

#   analyze:
#     <<: *defaults
#     steps:
#       - checkout
#       - restore_cache:
#           key: "npm_packages"
#       - run: npm audit
#       #- run: npm audit fix
#       - run: 
#           command: echo "Hello Error!"
#           when: on_fail

# workflows:
#   ci-pipeline:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build
#       - analyze:
#           requires:
#             - test