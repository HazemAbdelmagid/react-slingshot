version: 2.1

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: "Create a new production bucket using cloudformation template"
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \ 
            --stack-name "${CIRCLE_WORKFLOW_ID}" \
            --parameter-overrides NAME="${CIRCLE_WORKFLOW_ID}"
      #- run: aws s3 cp s3://new-production-bucket-udacity/index.html s3://mybucket/index.html

  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: "Get the ID of the previous bucket"
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: "Switch the new bucket to the existing CDN"
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID}"

  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/output.txt
      - run:
          name: "Delete the old bucket"
          command: |
            aws s3 rm "s3://${OldPipelineID}" --recursive
            aws cloudformation delete-stack --stack-name "${PreviousPipelineID}"


workflows:
  promote:
    jobs:
      - create_and_deploy_front_end
      - get_last_deployment_id:
          requires:
            - create_and_deploy_front_end
      - promote_to_production:
          requires:
            - get_last_deployment_id
      - clean_up_old_front_end:
          requires:
            - promote_to_production